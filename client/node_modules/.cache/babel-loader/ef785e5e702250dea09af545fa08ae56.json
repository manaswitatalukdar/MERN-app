{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\my-app\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from \"react\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.styles = {\n      fontSize: 15,\n      fontWeight: \"bold\"\n    };\n\n    this.handleIncrement = () => {\n      this.setState({\n        value: this.props.counter.value + 1\n      });\n    };\n\n    this.handleDecrement = () => {\n      this.setState({\n        value: this.props.counter.value - 1\n      });\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: this.styles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \"counter# \", this.props.counter.id), /*#__PURE__*/React.createElement(\"span\", {\n      style: this.styles,\n      className: this.getBadgeClasses(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, this.formatCount()), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleIncrement,\n      className: \"btn btn-primary btn-sm m-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"increment\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleDecrement,\n      className: \"btn btn-primary btn-sm m-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"decrement\"), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => this.props.onDelete(this.props.counter.id),\n      className: \"button btn btn-danger btn-sm m-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"delete\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.props, counter.value === 0 ? \"danger\" : \"warning\";\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      value\n    } = this.props.counter;\n    return value === 0 ? \"Zero\" : value;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:/Users/hp/my-app/src/components/counter.jsx"],"names":["React","Component","Counter","styles","fontSize","fontWeight","handleIncrement","setState","value","props","counter","handleDecrement","render","console","log","id","getBadgeClasses","formatCount","onDelete","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BE,MAD8B,GACrB;AACPC,MAAAA,QAAQ,EAAE,EADH;AAEPC,MAAAA,UAAU,EAAE;AAFL,KADqB;;AAAA,SAY9BC,eAZ8B,GAYZ,MAAM;AACtB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,OAAX,CAAmBF,KAAnB,GAA2B;AAApC,OAAd;AACD,KAd6B;;AAAA,SAgB9BG,eAhB8B,GAgBZ,MAAM;AACtB,WAAKJ,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,OAAX,CAAmBF,KAAnB,GAA2B;AAApC,OAAd;AACD,KAlB6B;AAAA;;AAoB9BI,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,KAAK,EAAE,KAAKN,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiC,KAAKM,KAAL,CAAWC,OAAX,CAAmBK,EAApD,CADF,eAEE;AAAM,MAAA,KAAK,EAAE,KAAKZ,MAAlB;AAA0B,MAAA,SAAS,EAAE,KAAKa,eAAL,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,WAAL,EADH,CAFF,eAKE;AACE,MAAA,OAAO,EAAE,KAAKX,eADhB;AAEE,MAAA,SAAS,EAAC,4BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,eAWE;AACE,MAAA,OAAO,EAAE,KAAKK,eADhB;AAEE,MAAA,SAAS,EAAC,4BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,eAiBE;AACE,MAAA,OAAO,EAAE,MAAM,KAAKF,KAAL,CAAWS,QAAX,CAAoB,KAAKT,KAAL,CAAWC,OAAX,CAAmBK,EAAvC,CADjB;AAEE,MAAA,SAAS,EAAC,kCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,CADF;AA2BD;;AAEDC,EAAAA,eAAe,GAAG;AAChB,QAAIG,OAAO,GAAG,kBAAd;AACCA,IAAAA,OAAO,IAAI,KAAKV,KAAjB,EAAyBC,OAAO,CAACF,KAAR,KAAkB,CAAlB,GAAsB,QAAtB,GAAiC,SAA1D;AACA,WAAOW,OAAP;AACD;;AAEDF,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAET,MAAAA;AAAF,QAAY,KAAKC,KAAL,CAAWC,OAA7B;AACA,WAAOF,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AA5D6B;;AA+DhC,eAAeN,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  styles = {\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n  };\r\n\r\n  // ALTERNATIVE FOR THE ARROW FUNCTION IN HANDLEINCREMENT\r\n  // constructor() {\r\n  //   super();\r\n  //   this.handleIncrement = this.handleIncrement.bind(this);\r\n  // }\r\n\r\n  handleIncrement = () => {\r\n    this.setState({ value: this.props.counter.value + 1 });\r\n  };\r\n\r\n  handleDecrement = () => {\r\n    this.setState({ value: this.props.counter.value - 1 });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <React.Fragment>\r\n        <p style={this.styles}>counter# {this.props.counter.id}</p>\r\n        <span style={this.styles} className={this.getBadgeClasses()}>\r\n          {this.formatCount()}\r\n        </span>\r\n        <button\r\n          onClick={this.handleIncrement}\r\n          className=\"btn btn-primary btn-sm m-2\"\r\n        >\r\n          increment\r\n        </button>\r\n        <button\r\n          onClick={this.handleDecrement}\r\n          className=\"btn btn-primary btn-sm m-2\"\r\n        >\r\n          decrement\r\n        </button>\r\n        <div\r\n          onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          className=\"button btn btn-danger btn-sm m-2\"\r\n        >\r\n          delete\r\n        </div>\r\n        <br></br>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  getBadgeClasses() {\r\n    let classes = \"badge m-2 badge-\";\r\n    (classes += this.props), counter.value === 0 ? \"danger\" : \"warning\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    const { value } = this.props.counter;\r\n    return value === 0 ? \"Zero\" : value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}